"""
Django settings for golden_step project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import datetime
import os
import cloudinary

from dotenv import load_dotenv

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (os.getenv('DEBUG','False').lower() in ('true','1'))

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "store",
    "order",
    "cloudinary",
    "debug_toolbar",
    "corsheaders",
    
    "users",
    "rest_framework",
    "rest_framework_simplejwt.token_blacklist",
    "rest_framework_nested",

    # Oauth
    'oauth2_provider',
    'social_django',
    'drf_social_oauth2',

]

MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "golden_step.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "social_django.context_processors.backends",
                "social_django.context_processors.login_redirect",
            ],
        },
    },
]

WSGI_APPLICATION = "golden_step.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "dev": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    },

    # * PostgreSQL database configuration
    "production": {
        'ENGINE':'django.db.backends.postgresql',
        'NAME':os.getenv('PG_DATABASE_NAME'),
        'USER':os.getenv('PG_USER'),
        'PASSWORD':os.getenv('PG_PASSWORD'),
        'HOST':os.getenv('PG_HOST','localhost'),
        'PORT':os.getenv('PG_PORT','5432'),
    }
}


DATABASES["default"] = DATABASES[ "dev" if DEBUG else "production" ]


# use User class as default auth model
AUTH_USER_MODEL = 'users.User'

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR,'static/')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES':(
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'drf_social_oauth2.authentication.SocialAuthentication',
    )
}

AUTHENTICATION_BACKENDS = (

    # * drf_social_oauth2
    'drf_social_oauth2.backends.DjangoOAuth2',

    # * Django default auth backend
    'django.contrib.auth.backends.ModelBackend',
)

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME':datetime.timedelta(minutes=6000),
    'REFRESH_TOKEN_LIFETIME':datetime.timedelta(days=1),
    'ROTATE_REFRESH_TOKENS':True,
    'BLACKLIST_AFTER_ROTATION':True,
    'UPDATE_LAST_LOGIN':True,
}



# * Cloudinary Configurations

cloudinary.config(
    cloud_name    = os.getenv('CLOUDINARY_CLOUD_NAME'),
    api_key       = os.getenv('CLOUDINARY_API_KEY'),
    api_secret    = os.getenv('CLOUDINARY_API_SECRET'),
)


# * ips for debug_toolbar
INTERNAL_IPS = [
    "127.0.0.1",
    ]

# * allow only trusted hosts
CLOUDFLARE_IPV4 = [
        '103.21.244.0/22', 
        '103.22.200.0/22', 
        '103.31.4.0/22', 
        '104.16.0.0/13', 
        '104.24.0.0/14', 
        '108.162.192.0/18', 
        '131.0.72.0/22', 
        '141.101.64.0/18', 
        '162.158.0.0/15', 
        '172.64.0.0/13', 
        '173.245.48.0/20', 
        '188.114.96.0/20', 
        '190.93.240.0/20', 
        '197.234.240.0/22', 
        '198.41.128.0/17'
    ]

CLOUDFLARE_IPV6 = [
        '2400:cb00::/32',
        '2606:4700::/32',
        '2803:f800::/32',
        '2405:b500::/32',
        '2405:8100::/32',
        '2a06:98c0::/29',
        '2c0f:f248::/32',
    ]

ALLOWED_HOSTS = [
    '127.0.0.1',
    'goldenstep.in',
    '159.89.163.122',
    'backend.goldenstep.in',
    'localhost',
    ]

ALLOWED_HOSTS += CLOUDFLARE_IPV4 + CLOUDFLARE_IPV6



